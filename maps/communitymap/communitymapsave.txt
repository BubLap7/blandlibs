{"map":{"name":"Test","ambient":"#97a0a8","light":"#f2f8fc","sky":"#dce8ed","fog":"#8d9aa0","fogD":2000,"xyz":[100,10,100,7,11,7],"objects":[{"p":[0,-10,0],"meshUUID":"D1920146-77EC-4F0D-9507-25A0C7EC71C9","objUUID":"F61ECE2A-AD07-47BA-9E8B-8E5F2A0D8770","si":0},{"p":[0,0,0],"meshUUID":"232FC2FB-19FA-4C15-884C-06AAC8EEA2DB","objUUID":"5A211280-1AF8-433F-A824-A38BACB634E2","i":5,"tm":0,"si":1}],"scripts":{"client":"","server":"IyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgSGVhZGVyOiBkb3VibGVqdW1wXERKX2hlYWQua3JuawojIEF1dGhvcjogYmxhbmRyaWNlCiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgU0VUVElOR1M6Cm51bSBkanVtcF9zZXJ2ZXJfREpfaGVhZF9NQVhfSlVNUENPVU5UID0gMjsgIyAyIGlzICJkb3VibGVqdW1wIiwgMyBpcyAidHJpcGxlanVtcCIKYm9vbCBkanVtcF9zZXJ2ZXJfREpfaGVhZF9XQUxMSlVNUF9SRUZSRVNIUyA9IHRydWU7CmJvb2wgZGp1bXBfc2VydmVyX0RKX2hlYWRfRU5BQkxFX0NST1VDSEpVTVAgPSB0cnVlOyAjIGxvd2VyIGhlaWdodCBmb3IgY3JvdWNoIGp1bXAsIGFsc28KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIGFwcGxpZXMgIm1vb25qdW1wIiBtaWQtYWlyIHBoeXNpY3MKbnVtIGRqdW1wX3NlcnZlcl9ESl9oZWFkX1NPVU5EID0gMzE5NjA7ICMgc291bmQgSUQuIHNldCB0byAwIGlmIG5vIHNvdW5kIGRlc2lyZWQKCiMgSEFSRC1DT0RFRCBOVU1CRVJTIC0gRE9OJ1QgVE9VQ0gKbnVtIGRqdW1wX3NlcnZlcl9ESl9oZWFkX01TX0RVUkFUSU9OX1VOQ1JPVUNIID0gMTY2OwpudW0gZGp1bXBfc2VydmVyX0RKX2hlYWRfSEVJR0hUX0pVTVAgPSAwLjA3OTM7ICMgNjBGUFMsIG1heCBjbGVhcmFuY2UgMTcuOSB1bml0cwpudW0gZGp1bXBfc2VydmVyX0RKX2hlYWRfSEVJR0hUX0NST1VDSEpVTVAgPSAwLjA1OTU7ICMgNjBGUFMsIG1heCBjbGVhcmFuY2UgMTAuMiB1bml0cwojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgTGlicmFyeTogZG91YmxlanVtcFxkanVtcF9zZXJ2ZXIua3JuawojIEF1dGhvcjogYmxhbmRyaWNlCiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoKCm51bSBkanVtcF9zZXJ2ZXJfdGltZU5vdyA9IDA7CgojIFJ1bnMgZXZlcnkgZ2FtZSB0aWNrCmFjdGlvbiBkanVtcF9zZXJ2ZXJfdXBkYXRlKG51bSBkZWx0YSkgewogICAgZGp1bXBfc2VydmVyX3RpbWVOb3cgPSBHQU1FLlRJTUUubm93KCk7Cn0KCmFjdGlvbiBkanVtcF9zZXJ2ZXJfb25QbGF5ZXJVcGRhdGUoc3RyIGlkLCBudW0gZGVsdGEsIG9iaiBpbnB1dHMpIHsKICAgIGRqdW1wX3NlcnZlcl90aW1lTm93ID0gR0FNRS5USU1FLm5vdygpOwogICAgb2JqIHBsYXllciA9IEdBTUUuUExBWUVSUy5maW5kQnlJRChpZCk7CiAgICAKICAgIGlmICgoYm9vbCkgaW5wdXRzLmNyb3VjaCkgewogICAgICAgIHBsYXllci50TGFzdENyb3VjaCA9IGRqdW1wX3NlcnZlcl90aW1lTm93OwogICAgfQogICAgaWYgKChib29sKSBwbGF5ZXIub25Hcm91bmQpIHsKICAgICAgICBwbGF5ZXIuanVtcENudCA9IGRqdW1wX3NlcnZlcl9ESl9oZWFkX01BWF9KVU1QQ09VTlQtMTsKICAgIH0gZWxzZSBpZiAoZGp1bXBfc2VydmVyX0RKX2hlYWRfV0FMTEpVTVBfUkVGUkVTSFMgJiYgKGJvb2wpIHBsYXllci5vbldhbGwgJiYgKGJvb2wpIGlucHV0cy5qdW1wKSB7CiAgICAgICAgcGxheWVyLmp1bXBDbnQgPSBkanVtcF9zZXJ2ZXJfREpfaGVhZF9NQVhfSlVNUENPVU5ULTE7CgogICAgfQogICAgaWYoKGJvb2wpIGlucHV0cy5qdW1wKSB7CiAgICAgICAgaWYoKGJvb2wpcGxheWVyLmp1bXBQcmVzc2VkID09IGZhbHNlICYmIChudW0pIHBsYXllci5qdW1wQ250ID4gMCAmJiAhKGJvb2wpIHBsYXllci5vbkdyb3VuZCkgewogICAgICAgICAgICBpZiAoIShib29sKSBwbGF5ZXIub25XYWxsICYmIGRqdW1wX3NlcnZlcl9ESl9oZWFkX1dBTExKVU1QX1JFRlJFU0hTKSB7CiAgICAgICAgICAgICAgICBpZiAoZGp1bXBfc2VydmVyX0RKX2hlYWRfRU5BQkxFX0NST1VDSEpVTVAgJiYgKGRqdW1wX3NlcnZlcl90aW1lTm93IC0gKChudW0pIHBsYXllci50TGFzdENyb3VjaCkpIDwgZGp1bXBfc2VydmVyX0RKX2hlYWRfTVNfRFVSQVRJT05fVU5DUk9VQ0gpIHsKICAgICAgICAgICAgICAgICAgICBwbGF5ZXIudmVsb2NpdHkueSA9IE1hdGgubGVycChkanVtcF9zZXJ2ZXJfREpfaGVhZF9IRUlHSFRfQ1JPVUNISlVNUCxkanVtcF9zZXJ2ZXJfREpfaGVhZF9IRUlHSFRfSlVNUCwoZGp1bXBfc2VydmVyX3RpbWVOb3cgLSAoKG51bSkgcGxheWVyLnRMYXN0Q3JvdWNoKSkvZGp1bXBfc2VydmVyX0RKX2hlYWRfTVNfRFVSQVRJT05fVU5DUk9VQ0gpOwkKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgcGxheWVyLnZlbG9jaXR5LnkgPSBkanVtcF9zZXJ2ZXJfREpfaGVhZF9IRUlHSFRfSlVNUDsJICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgKG51bSkgcGxheWVyLmp1bXBDbnQtLTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBwbGF5ZXIuanVtcFByZXNzZWQgPSB0cnVlOwoJfSBlbHNlIHsKICAgICAgICBwbGF5ZXIuanVtcFByZXNzZWQgPSBmYWxzZTsKICAgIH0KfQoKIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiMgYXV0by1kZXRlY3RlZCBwdWJsaWMgYWN0aW9ucyBmcm9tIGxpYnJhcmllcwojID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KcHVibGljIGFjdGlvbiB1cGRhdGUgKG51bSBkZWx0YSl7CiAgICBkanVtcF9zZXJ2ZXJfdXBkYXRlKGRlbHRhKTsKfQoKcHVibGljIGFjdGlvbiBvblBsYXllclVwZGF0ZSAoc3RyIGlkLCBudW0gZGVsdGEsIG9iaiBpbnB1dHMpewogICAgZGp1bXBfc2VydmVyX29uUGxheWVyVXBkYXRlKGlkLCAgZGVsdGEsICBpbnB1dHMpOwp9Cgo="}},"groups":{},"cam":{"p":[0,50,100],"r":[0,0,0]},"history":[]}